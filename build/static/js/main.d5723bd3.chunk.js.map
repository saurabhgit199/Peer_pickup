{"version":3,"sources":["firebase-config.js","components/Chat.js","logo-white.png","components/Auth.js","components/AppWrapper.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","provider","GoogleAuthProvider","db","getFirestore","Chat","_ref","room","messages","setMessages","useState","newMessage","setNewMessage","showRequestForm","setShowRequestForm","selectedMessageId","setSelectedMessageId","expandedMessageId","setExpandedMessageId","requestFormData","setRequestFormData","heading","items","logisticsFees","pickupLocation","dropLocation","itemInput","setItemInput","messagesRef","collection","useEffect","queryMessages","query","where","orderBy","unsubscribe","onSnapshot","snapshot","forEach","doc","push","data","id","_jsxs","className","children","_jsx","toUpperCase","map","message","fulfilled","text","startsWith","onClick","user","e","stopPropagation","async","messageRef","messageId","updateDoc","handleFulfill","requestDetails","join","onSubmit","event","preventDefault","addDoc","createdAt","serverTimestamp","currentUser","displayName","type","value","onChange","target","placeholder","handleRequestButtonClick","handleICanGetClick","handleAddItem","prevData","item","index","cookies","Cookies","Auth","setIsAuth","console","log","src","logoWhite","alt","result","signInWithPopup","set","refreshToken","err","error","email","password","userCredential","signInWithEmailAndPassword","signInWithEmail","name","required","AppWrapper","isAuth","setIsInChat","signOut","remove","ChatApp","get","isInChat","setRoom","joinedRooms","setJoinedRooms","roomsRef","uid","q","rooms","getDocs","docs","fetchJoinedRooms","length","r","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","App"],"mappings":"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","file":"static/js/main.d5723bd3.chunk.js","sourcesContent":["// src/firebase-config.js\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\nimport {getFirestore} from 'firebase/firestore'\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCmSEgyaYato1bzHVHnxjkuyc7-USWBZnQ\",\n  authDomain: \"peer-port.firebaseapp.com\",\n  projectId: \"peer-port\",\n  storageBucket: \"peer-port.appspot.com\",\n  messagingSenderId: \"84932371825\",\n  appId: \"1:84932371825:web:b86de38dce7cf7477f02d0\",\n  measurementId: \"G-NP26W6ZQMY\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const provider = new GoogleAuthProvider();\nexport const db = getFirestore(app);\n","import React, { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebase-config\";\nimport {\n  collection,\n  addDoc,\n  where,\n  serverTimestamp,\n  onSnapshot,\n  query,\n  orderBy,\n  updateDoc,\n  doc\n} from \"firebase/firestore\";\nimport \"../styles/Chat.css\";\nimport \"../styles/RequestForm.css\";\n\nexport const Chat = ({ room }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [showRequestForm, setShowRequestForm] = useState(false);\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\n  const [expandedMessageId, setExpandedMessageId] = useState(null); // For expanding message details\n  const [requestFormData, setRequestFormData] = useState({\n    heading: \"\",\n    items: [],\n    logisticsFees: \"\",\n    pickupLocation: \"\",\n    dropLocation: \"\"\n  });\n  const [itemInput, setItemInput] = useState(\"\"); // State for the new item input\n  const messagesRef = collection(db, \"messages\");\n\n  useEffect(() => {\n    const queryMessages = query(\n      messagesRef,\n      where(\"room\", \"==\", room),\n      orderBy(\"createdAt\")\n    );\n    const unsubscribe = onSnapshot(queryMessages, (snapshot) => {\n      let messages = [];\n      snapshot.forEach((doc) => {\n        messages.push({ ...doc.data(), id: doc.id });\n      });\n      setMessages(messages);\n    });\n\n    return () => unsubscribe();\n  }, [room]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (newMessage === \"\") return;\n\n    await addDoc(messagesRef, {\n      text: newMessage,\n      createdAt: serverTimestamp(),\n      user: auth.currentUser.displayName,\n      room,\n    });\n\n    setNewMessage(\"\");\n  };\n\n  const handleRequestFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (requestFormData.heading === \"\") return;\n    await addDoc(messagesRef, {\n      text: `I Want: ${requestFormData.heading}`,\n      createdAt: serverTimestamp(),\n      user: auth.currentUser.displayName,\n      room,\n      requestDetails: requestFormData // Add the request form data to the message\n    });\n\n    // Reset form data\n    setRequestFormData({\n      heading: \"\",\n      items: [],\n      logisticsFees: \"\",\n      pickupLocation: \"\",\n      dropLocation: \"\"\n    });\n    setItemInput(\"\"); // Reset item input\n    setShowRequestForm(false);\n  };\n\n  const handleFulfill = async (messageId) => {\n    const messageRef = doc(db, \"messages\", messageId);\n    await updateDoc(messageRef, {\n      fulfilled: true\n    });\n  };\n\n  const handleViewDetails = (messageId) => {\n    setExpandedMessageId(expandedMessageId === messageId ? null : messageId); // Toggle the expanded state\n  };\n\n  const handleRequestButtonClick = () => {\n    setShowRequestForm(true);\n    setSelectedMessageId(null);\n  };\n\n  const handleICanGetClick = () => {\n    setNewMessage(\"\"); // Clear the message input to avoid any unwanted text\n  };\n\n  const handleAddItem = () => {\n    if (itemInput) {\n      setRequestFormData((prevData) => ({\n        ...prevData,\n        items: [...prevData.items, itemInput]\n      }));\n      setItemInput(\"\"); // Clear input field after adding\n    }\n  };\n\n  const handleItemInputChange = (event) => {\n    setItemInput(event.target.value);\n  };\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"header\">\n        <h1>Welcome to: {room.toUpperCase()}</h1>\n      </div>\n      <div className=\"messages\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`message ${message.fulfilled ? 'fulfilled' : (message.text.startsWith('I Want') ? 'i-want' : 'i-can-get')}`}\n            onClick={() => {\n              if (message.text.startsWith('I Want')) {\n                setSelectedMessageId(message.id);\n              }\n            }}\n          >\n            <span className=\"user\">{message.user}:</span>\n            <div className=\"message-text\">{message.text}</div>\n            {message.text.startsWith('I Want') && !message.fulfilled && (\n              <div className=\"message-actions\">\n                <button\n                  className=\"fulfill-button\"\n                  onClick={(e) => {\n                    e.stopPropagation(); // Prevents the click from triggering the message click event\n                    handleFulfill(message.id);\n                  }}\n                >\n                  Fulfill\n                </button>\n                <button\n                  className=\"view-details-button\"\n                  onClick={(e) => {\n                    e.stopPropagation(); // Prevents the click from triggering the message click event\n                    handleViewDetails(message.id);\n                  }}\n                >\n                  {expandedMessageId === message.id ? \"Hide Details\" : \"View Details\"}\n                </button>\n              </div>\n            )}\n            {expandedMessageId === message.id && message.requestDetails && (\n              <div className=\"message-details\">\n                <p><strong>Heading:</strong> {message.requestDetails.heading}</p>\n                <p><strong>Items:</strong> {message.requestDetails.items.join(\", \")}</p>\n                <p><strong>Logistics Fees:</strong> {message.requestDetails.logisticsFees}</p>\n                <p><strong>Pickup Location:</strong> {message.requestDetails.pickupLocation}</p>\n                <p><strong>Drop Location:</strong> {message.requestDetails.dropLocation}</p>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit} className=\"new-message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(event) => setNewMessage(event.target.value)}\n          className=\"new-message-input\"\n          placeholder=\"Type your message here...\"\n        />\n        <button type=\"submit\" className=\"send-button\">\n          Send\n        </button>\n        <button\n          type=\"button\"\n          className=\"request-button\"\n          onClick={handleRequestButtonClick}\n        >\n          I Want\n        </button>\n        <button\n          type=\"button\"\n          className=\"i-can-get-button\"\n          onClick={handleICanGetClick}\n        >\n          I Can Get\n        </button>\n      </form>\n      {showRequestForm && (\n        <div className=\"request-form\">\n          <h2>Request Details</h2>\n          <form onSubmit={handleRequestFormSubmit}>\n            <label>\n              What do you want:\n              <input\n                type=\"text\"\n                value={requestFormData.heading}\n                onChange={(e) => setRequestFormData({ ...requestFormData, heading: e.target.value })}\n                placeholder=\"What do you want?\"\n              />\n            </label>\n            <label>\n              List of items required:\n              <input\n                type=\"text\"\n                value={itemInput}\n                onChange={handleItemInputChange}\n                placeholder=\"Add an item\"\n              />\n              <button type=\"button\" onClick={handleAddItem}>\n                Add Item\n              </button>\n              <ul>\n                {requestFormData.items.map((item, index) => (\n                  <li key={index}>{item}</li>\n                ))}\n              </ul>\n            </label>\n            <label>\n              Logistics fees offered:\n              <input\n                type=\"text\"\n                value={requestFormData.logisticsFees}\n                onChange={(e) => setRequestFormData({ ...requestFormData, logisticsFees: e.target.value })}\n              />\n            </label>\n            <label>\n              Pickup location:\n              <input\n                type=\"text\"\n                value={requestFormData.pickupLocation}\n                onChange={(e) => setRequestFormData({ ...requestFormData, pickupLocation: e.target.value })}\n              />\n            </label>\n            <label>\n              Drop location:\n              <input\n                type=\"text\"\n                value={requestFormData.dropLocation}\n                onChange={(e) => setRequestFormData({ ...requestFormData, dropLocation: e.target.value })}\n              />\n            </label>\n            <button type=\"submit\" className=\"submit-button\">Submit</button>\n            <button type=\"button\" className=\"close-button\" onClick={() => setShowRequestForm(false)}>Close</button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo-white.553a5d8e.png\";","import React from \"react\";\nimport { auth, provider } from \"../firebase-config.js\";\nimport { signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport \"../styles/Auth.css\";\nimport Cookies from \"js-cookie\";\nimport logoWhite from '../logo-white.png'; // Import the white logo\n\nconst cookies = Cookies;\n\nexport const Auth = ({ setIsAuth }) => {\n  console.log(\"Auth component rendered\");\n  \n  const signInWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      cookies.set(\"auth-token\", result.user.refreshToken);\n      setIsAuth(true);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const signInWithEmail = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      cookies.set(\"auth-token\", userCredential.user.refreshToken);\n      setIsAuth(true);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const registerWithEmail = async (email, password) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      cookies.set(\"auth-token\", userCredential.user.refreshToken);\n      setIsAuth(true);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    signInWithEmail(email, password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    registerWithEmail(email, password);\n  };\n\n  return (\n    <div className=\"auth\">\n      {/* Image and title at the top */}\n      <div className=\"logo-container\">\n        <div className=\"logo-title\">Peer-Port</div>\n        <img src={logoWhite} alt=\"Logo\" className=\"logo\" />\n      </div>\n      \n      <p>Sign In With Google To Continue</p>\n      <button onClick={signInWithGoogle}>Sign In With Google</button>\n      \n      <form onSubmit={handleLogin}>\n        <h3>Sign In</h3>\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n        <button type=\"submit\">Sign In</button>\n      </form>\n      \n      {/* Instructions section */}\n      <div className=\"instructions-container\">\n        <h2 className=\"instructions-header\">How to Use the App</h2>\n        <ul className=\"instructions-list\">\n          <li>Enter your credentials and click <strong>\"Sign in with Google\"</strong>.</li>\n          <li>Enter the locality name or institute name in the room to join your peer community.</li>\n          <li>\n            If you need to transport or get something delivered, or want to go to another area of your city, ask your peers by posting your request by clicking on the <strong>\"I want\"</strong> button in the room.\n          </li>\n          <li>Decide the amount of fees you can offer for the service.</li>\n          <li>\n            If you're visiting or passing by another location, check the requests to see if you can help.\n          </li>\n          <li>\n            Click on the <strong>\"Fulfill\"</strong> button to offer your service and earn cash.\n          </li>\n          <li>\n            Complete the delivery, receive the agreed-upon fee, and reduce the carbon footprint by using <strong>Peer-Port, the peer transport platform.</strong>\n          </li>\n        </ul>\n      </div>\n      {/* End of instructions section */}\n    </div>\n  );\n};\n","// src/components/AppWrapper.js\nimport React from \"react\";\nimport { signOut } from \"firebase/auth\";\nimport { auth } from \"../firebase-config.js\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nexport const AppWrapper = ({ children, isAuth, setIsAuth, setIsInChat }) => {\n  const signUserOut = async () => {\n    await signOut(auth);\n    cookies.remove(\"auth-token\");\n    setIsAuth(false);\n    setIsInChat(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-header\">\n        <h1> Peer-port</h1>\n      </div>\n\n      <div className=\"app-container\">{children}</div>\n      {isAuth && (\n        <div className=\"sign-out\">\n          <button onClick={signUserOut}> Sign Out</button>\n        </div>\n      )}\n    </div>\n  );\n};\n","// src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport { Chat } from \"./components/Chat\";\nimport { Auth } from \"./components/Auth.js\";\nimport { AppWrapper } from \"./components/AppWrapper\";\nimport Cookies from \"universal-cookie\";\nimport { db, auth } from \"./firebase-config\";\nimport { collection, getDocs, addDoc, query, where } from \"firebase/firestore\";\nimport \"./styles/Auth.css\";\n\nconst cookies = new Cookies();\n\nfunction ChatApp() {\n  const [isAuth, setIsAuth] = useState(cookies.get(\"auth-token\"));\n  const [isInChat, setIsInChat] = useState(false);\n  const [room, setRoom] = useState(\"\");\n  const [joinedRooms, setJoinedRooms] = useState([]);\n\n  useEffect(() => {\n    if (isAuth) {\n      const fetchJoinedRooms = async () => {\n        const user = auth.currentUser;\n        if (user) {\n          const roomsRef = collection(db, \"users\", user.uid, \"rooms\");\n          const q = query(roomsRef);\n          const querySnapshot = await getDocs(q);\n          const rooms = querySnapshot.docs.map(doc => doc.data().name);\n          setJoinedRooms(rooms);\n        }\n      };\n      fetchJoinedRooms();\n    }\n  }, [isAuth]);\n\n  const handleJoinRoom = async () => {\n    if (room) {\n      const user = auth.currentUser;\n      if (user) {\n        const roomsRef = collection(db, \"users\", user.uid, \"rooms\");\n        await addDoc(roomsRef, { name: room });\n\n        // Update local state\n        setJoinedRooms([...joinedRooms, room]);\n        setIsInChat(true);\n      }\n    }\n  };\n\n  const handleRoomClick = (roomName) => {\n    setRoom(roomName);\n    setIsInChat(true);\n  };\n\n  if (!isAuth) {\n    return (\n      <AppWrapper isAuth={isAuth} setIsAuth={setIsAuth} setIsInChat={setIsInChat}>\n        <Auth setIsAuth={setIsAuth} />\n      </AppWrapper>\n    );\n  }\n\n  return (\n    <AppWrapper isAuth={isAuth} setIsAuth={setIsAuth} setIsInChat={setIsInChat}>\n      {!isInChat ? (\n        <div className=\"room\">\n          <label>Type room name:</label>\n          <input onChange={(e) => setRoom(e.target.value)} />\n          <button onClick={handleJoinRoom}>Enter Chat</button>\n          <div className=\"joined-rooms\">\n            {joinedRooms.length > 0 && (\n              <div>\n                <h2>Joined Rooms:</h2>\n                <ul>\n                  {joinedRooms.map((r, index) => (\n                    <li key={index}>\n                      {r}\n                      <button onClick={() => handleRoomClick(r)}>Enter Room</button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <Chat room={room} />\n      )}\n    </AppWrapper>\n  );\n}\n\nexport default ChatApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}