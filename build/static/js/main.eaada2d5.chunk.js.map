{"version":3,"sources":["firebase-config.js","components/PrivateChat.js","components/Chat.js","logo-white.png","components/Auth.js","components/AppWrapper.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","provider","GoogleAuthProvider","db","getFirestore","PrivateChat","_ref","requestId","onClose","messages","setMessages","useState","newMessage","setNewMessage","chatRef","collection","useEffect","q","query","where","unsubscribe","onSnapshot","snapshot","fetchedMessages","forEach","doc","push","data","id","_jsxs","className","children","_jsx","onClick","map","message","user","currentUser","displayName","text","onSubmit","async","event","preventDefault","addDoc","createdAt","Date","type","value","onChange","e","target","placeholder","Chat","room","showRequestForm","setShowRequestForm","selectedMessageId","setSelectedMessageId","expandedMessageId","setExpandedMessageId","requestFormData","setRequestFormData","heading","items","logisticsFees","pickupLocation","dropLocation","itemInput","setItemInput","showPrivateChat","setShowPrivateChat","privateChatRequestId","setPrivateChatRequestId","messagesRef","queryMessages","orderBy","toUpperCase","fulfilled","startsWith","stopPropagation","messageRef","messageId","updateDoc","handleFulfill","requestDetails","join","serverTimestamp","handleRequestButtonClick","handleICanGetClick","handleAddItem","prevData","item","index","handleClosePrivateChat","cookies","Cookies","Auth","setIsAuth","console","log","src","logoWhite","alt","result","signInWithPopup","set","refreshToken","err","error","email","password","userCredential","signInWithEmailAndPassword","signInWithEmail","name","required","AppWrapper","isAuth","setIsInChat","signOut","remove","ChatApp","get","isInChat","setRoom","joinedRooms","setJoinedRooms","roomsRef","uid","rooms","getDocs","docs","fetchJoinedRooms","length","r","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","App"],"mappings":"mQAIA,MAUMA,EAAMC,YAVW,CACrBC,OAAQ,0CACRC,WAAY,4BACZC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAIJC,EAAOC,YAAQV,GACfW,EAAW,IAAIC,IACfC,EAAKC,YAAad,G,6BCZxB,MAAMe,EAAcC,IAA6B,IAA5B,UAAEC,EAAS,QAAEC,GAASF,EAChD,MAAOG,EAAUC,GAAeC,mBAAS,KAClCC,EAAYC,GAAiBF,mBAAS,IACvCG,EAAUC,YAAWZ,EAAI,gBAE/Ba,qBAAU,KACR,MAAMC,EAAIC,YACRJ,EACAK,YAAM,YAAa,KAAMZ,IAGrBa,EAAcC,YAAWJ,GAAIK,IACjC,MAAMC,EAAkB,GACxBD,EAASE,SAASC,IAChBF,EAAgBG,KAAK,IAAKD,EAAIE,OAAQC,GAAIH,EAAIG,IAAK,IAErDlB,EAAYa,EAAgB,IAG9B,MAAO,IAAMH,GAAa,GACzB,CAACb,IAiBJ,OACEsB,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BF,eAAA,OAAKC,UAAU,sBAAqBC,SAAA,CAClCC,cAAA,MAAAD,SAAI,iBACJC,cAAA,UAAQF,UAAU,aAAaG,QAASzB,EAAQuB,SAAC,aAInDC,cAAA,OAAKF,UAAU,wBAAuBC,SACnCtB,EAASyB,KAAKC,GACbN,eAAA,OAEEC,UAAW,yBACTK,EAAQC,OAASrC,EAAKsC,YAAYC,YAAc,OAAS,YACxDP,SAAA,CAEHF,eAAA,UAAAE,SAAA,CAASI,EAAQC,KAAK,OAAU,IAAED,EAAQI,OALrCJ,EAAQP,QASnBC,eAAA,QAAMW,SAnCWC,UACnBC,EAAMC,iBAEa,KAAf/B,UAEEgC,YAAO9B,EAAS,CACpByB,KAAM3B,EACNiC,UAAW,IAAIC,KACfV,KAAMrC,EAAKsC,YAAYC,YACvB/B,cAGFM,EAAc,IAAG,EAuBeiB,UAAU,oBAAmBC,SAAA,CACzDC,cAAA,SACEe,KAAK,OACLC,MAAOpC,EACPqC,SAAWC,GAAMrC,EAAcqC,EAAEC,OAAOH,OACxClB,UAAU,qBACVsB,YAAY,yBAEdpB,cAAA,UAAQe,KAAK,SAASjB,UAAU,2BAA0BC,SAAC,cAIzD,ECnEGsB,EAAO/C,IAAe,IAAd,KAAEgD,GAAMhD,EAC3B,MAAOG,EAAUC,GAAeC,mBAAS,KAClCC,EAAYC,GAAiBF,mBAAS,KACtC4C,EAAiBC,GAAsB7C,oBAAS,IAChD8C,EAAmBC,GAAwB/C,mBAAS,OACpDgD,EAAmBC,GAAwBjD,mBAAS,OACpDkD,EAAiBC,GAAsBnD,mBAAS,CACrDoD,QAAS,GACTC,MAAO,GACPC,cAAe,GACfC,eAAgB,GAChBC,aAAc,MAETC,EAAWC,GAAgB1D,mBAAS,KACpC2D,EAAiBC,GAAsB5D,oBAAS,IAChD6D,EAAsBC,GAA2B9D,mBAAS,MAE3D+D,EAAc3D,YAAWZ,EAAI,YAEnCa,qBAAU,KACR,MAAM2D,EAAgBzD,YACpBwD,EACAvD,YAAM,OAAQ,KAAMmC,GACpBsB,YAAQ,cAEJxD,EAAcC,YAAWsD,GAAgBrD,IAC7C,IAAIb,EAAW,GACfa,EAASE,SAASC,IAChBhB,EAASiB,KAAK,IAAKD,EAAIE,OAAQC,GAAIH,EAAIG,IAAK,IAE9ClB,EAAYD,EAAS,IAGvB,MAAO,IAAMW,GAAa,GACzB,CAACkC,IAwFJ,OACEzB,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACvBC,cAAA,OAAKF,UAAU,SAAQC,SACrBF,eAAA,MAAAE,SAAA,CAAI,eAAauB,EAAKuB,mBAExB7C,cAAA,OAAKF,UAAU,WAAUC,SACtBtB,EAASyB,KAAKC,GACbN,eAAA,OAEEC,UAAW,YAAWK,EAAQ2C,UAAY,YAAe3C,EAAQI,KAAKwC,WAAW,UAAY,SAAW,aACxG9C,QAASA,KACHE,EAAQI,KAAKwC,WAAW,WAC1BrB,EAAqBvB,EAAQP,GAC/B,EACAG,SAAA,CAEFF,eAAA,QAAMC,UAAU,OAAMC,SAAA,CAAEI,EAAQC,KAAK,OACrCJ,cAAA,OAAKF,UAAU,eAAcC,SAAEI,EAAQI,OACtCJ,EAAQI,KAAKwC,WAAW,WACvBlD,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BC,cAAA,UACEF,UAAU,iBACVG,QAAUiB,IACRA,EAAE8B,kBAtEEvC,WACpB,MAAMwC,EAAaxD,YAAItB,EAAI,WAAY+E,SACjCC,YAAUF,EAAY,CAC1BH,WAAW,IAIbL,EAAwBS,GACxBX,GAAmB,EAAK,EA+DRa,CAAcjD,EAAQP,GAAG,EACzBG,SACH,YAGDC,cAAA,UACEF,UAAU,sBACVG,QAAUiB,IAnECgC,MAoEThC,EAAE8B,kBApEOE,EAqES/C,EAAQP,GApE1CgC,EAAqBD,IAAsBuB,EAAY,KAAOA,EAoEjB,EAC7BnD,SAED4B,IAAsBxB,EAAQP,GAAK,eAAiB,iBAEvDI,cAAA,UACEF,UAAU,cACVG,QAAUiB,IAjDK3C,MAkDb2C,EAAE8B,kBAlDWzE,EAmDS4B,EAAQP,GAlD9C6C,EAAwBlE,GACxBgE,GAAmB,EAiD8B,EACjCxC,SACH,YAKJ4B,IAAsBxB,EAAQP,IAAMO,EAAQkD,gBAC3CxD,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,KAAAE,SAAA,CAAGC,cAAA,UAAAD,SAAQ,aAAiB,IAAEI,EAAQkD,eAAetB,WACrDlC,eAAA,KAAAE,SAAA,CAAGC,cAAA,UAAAD,SAAQ,WAAe,IAAEI,EAAQkD,eAAerB,MAAMsB,KAAK,SAC9DzD,eAAA,KAAAE,SAAA,CAAGC,cAAA,UAAAD,SAAQ,oBAAwB,IAAEI,EAAQkD,eAAepB,iBAC5DpC,eAAA,KAAAE,SAAA,CAAGC,cAAA,UAAAD,SAAQ,qBAAyB,IAAEI,EAAQkD,eAAenB,kBAC7DrC,eAAA,KAAAE,SAAA,CAAGC,cAAA,UAAAD,SAAQ,mBAAuB,IAAEI,EAAQkD,eAAelB,qBA/C1DhC,EAAQP,QAqDnBC,eAAA,QAAMW,SAnJWC,UACnBC,EAAMC,iBAEa,KAAf/B,UAEEgC,YAAO8B,EAAa,CACxBnC,KAAM3B,EACNiC,UAAW0C,cACXnD,KAAMrC,EAAKsC,YAAYC,YACvBgB,SAGFzC,EAAc,IAAG,EAuIeiB,UAAU,mBAAkBC,SAAA,CACxDC,cAAA,SACEe,KAAK,OACLC,MAAOpC,EACPqC,SAAWP,GAAU7B,EAAc6B,EAAMS,OAAOH,OAChDlB,UAAU,oBACVsB,YAAY,8BAEdpB,cAAA,UAAQe,KAAK,SAASjB,UAAU,cAAaC,SAAC,SAG9CC,cAAA,UACEe,KAAK,SACLjB,UAAU,iBACVG,QA3GyBuD,KAC/BhC,GAAmB,GACnBE,EAAqB,KAAK,EAyGc3B,SACnC,WAGDC,cAAA,UACEe,KAAK,SACLjB,UAAU,mBACVG,QA7GmBwD,KACzB5E,EAAc,GAAG,EA4GiBkB,SAC7B,iBAIFwB,GACC1B,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BC,cAAA,MAAAD,SAAI,oBACJF,eAAA,QAAMW,SAjKkBC,UAG9B,GAFAC,EAAMC,iBAE0B,KAA5BkB,EAAgBE,QAAgB,aACfnB,YAAO8B,EAAa,CACvCnC,KAAM,WAAWsB,EAAgBE,UACjClB,UAAW0C,cACXnD,KAAMrC,EAAKsC,YAAYC,YACvBgB,OACA+B,eAAgBxB,IAIlBC,EAAmB,CACjBC,QAAS,GACTC,MAAO,GACPC,cAAe,GACfC,eAAgB,GAChBC,aAAc,KAEhBE,EAAa,IACbb,GAAmB,EAAM,EA4IqBzB,SAAA,CACtCF,eAAA,SAAAE,SAAA,CAAO,WAELC,cAAA,SACEe,KAAK,OACLC,MAAOa,EAAgBE,QACvBd,SAAWC,GACTY,EAAmB,IAAKD,EAAiBE,QAASb,EAAEC,OAAOH,aAIjEnB,eAAA,SAAAE,SAAA,CAAO,SAELC,cAAA,SACEe,KAAK,OACLC,MAAOoB,EACPnB,SAvHiBP,IAC7B2B,EAAa3B,EAAMS,OAAOH,MAAM,EAuHpBI,YAAY,oBAEdpB,cAAA,UAAQe,KAAK,SAASd,QApIZyD,KAChBtB,IACFN,GAAoB6B,IAAQ,IACvBA,EACH3B,MAAO,IAAI2B,EAAS3B,MAAOI,OAE7BC,EAAa,IACf,EA6HuDtC,SAAC,aAG9CC,cAAA,MAAAD,SACG8B,EAAgBG,MAAM9B,KAAI,CAAC0D,EAAMC,IAChC7D,cAAA,MAAAD,SAAiB6D,GAARC,UAIfhE,eAAA,SAAAE,SAAA,CAAO,kBAELC,cAAA,SACEe,KAAK,OACLC,MAAOa,EAAgBI,cACvBhB,SAAWC,GACTY,EAAmB,IAAKD,EAAiBI,cAAef,EAAEC,OAAOH,aAIvEnB,eAAA,SAAAE,SAAA,CAAO,mBAELC,cAAA,SACEe,KAAK,OACLC,MAAOa,EAAgBK,eACvBjB,SAAWC,GACTY,EAAmB,IAAKD,EAAiBK,eAAgBhB,EAAEC,OAAOH,aAIxEnB,eAAA,SAAAE,SAAA,CAAO,iBAELC,cAAA,SACEe,KAAK,OACLC,MAAOa,EAAgBM,aACvBlB,SAAWC,GACTY,EAAmB,IAAKD,EAAiBM,aAAcjB,EAAEC,OAAOH,aAItEhB,cAAA,UAAQe,KAAK,SAAQhB,SAAC,mBACtBC,cAAA,UAAQe,KAAK,SAASd,QAASA,IAAMuB,GAAmB,GAAOzB,SAAC,iBAMrEuC,GACCtC,cAAC3B,EAAW,CACVE,UAAWiE,EACXhE,QAlKuBsF,KAC7BvB,GAAmB,EAAM,MAoKnB,E,2BClSK,MAA0B,uCCOzC,MAAMwB,EAAUC,IAEHC,EAAO3F,IAAoB,IAAnB,UAAE4F,GAAW5F,EAChC6F,QAAQC,IAAI,2BA8CZ,OACEvE,eAAA,OAAKC,UAAU,OAAMC,SAAA,CAEnBF,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,aAAYC,SAAC,cAC5BC,cAAA,OAAKqE,IAAKC,EAAWC,IAAI,OAAOzE,UAAU,YAG5CE,cAAA,KAAAD,SAAG,oCACHC,cAAA,UAAQC,QArDaQ,UACvB,IACE,MAAM+D,QAAeC,YAAgB1G,EAAME,GAC3C8F,EAAQW,IAAI,aAAcF,EAAOpE,KAAKuE,cACtCT,GAAU,EACZ,CAAE,MAAOU,GACPT,QAAQU,MAAMD,EAChB,GA8CoC7E,SAAC,wBAEnCF,eAAA,QAAMW,SAzBWU,IACnBA,EAAEP,iBArBoBF,OAAOqE,EAAOC,KACpC,IACE,MAAMC,QAAuBC,YAA2BlH,EAAM+G,EAAOC,GACrEhB,EAAQW,IAAI,aAAcM,EAAe5E,KAAKuE,cAC9CT,GAAU,EACZ,CAAE,MAAOU,GACPT,QAAQU,MAAMD,EAChB,GAiBAM,CAFchE,EAAEC,OAAO2D,MAAM9D,MACZE,EAAEC,OAAO4D,SAAS/D,MACH,EAqBFjB,SAAA,CAC1BC,cAAA,MAAAD,SAAI,YACJC,cAAA,SAAOe,KAAK,QAAQoE,KAAK,QAAQ/D,YAAY,QAAQgE,UAAQ,IAC7DpF,cAAA,SAAOe,KAAK,WAAWoE,KAAK,WAAW/D,YAAY,WAAWgE,UAAQ,IACtEpF,cAAA,UAAQe,KAAK,SAAQhB,SAAC,eAIxBF,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACrCC,cAAA,MAAIF,UAAU,sBAAqBC,SAAC,uBACpCF,eAAA,MAAIC,UAAU,oBAAmBC,SAAA,CAC/BF,eAAA,MAAAE,SAAA,CAAI,oCAAiCC,cAAA,UAAAD,SAAQ,0BAA8B,OAC3EC,cAAA,MAAAD,SAAI,uFACJF,eAAA,MAAAE,SAAA,CAAI,8JACyJC,cAAA,UAAAD,SAAQ,aAAiB,0BAEtLC,cAAA,MAAAD,SAAI,6DACJC,cAAA,MAAAD,SAAI,kGAGJF,eAAA,MAAAE,SAAA,CAAI,gBACWC,cAAA,UAAAD,SAAQ,cAAkB,kDAEzCF,eAAA,MAAAE,SAAA,CAAI,gGAC2FC,cAAA,UAAAD,SAAQ,uDAKvG,E,YC1FV,MAAMgE,EAAU,IAAIC,IAEPqB,EAAa/G,IAAmD,IAAlD,SAAEyB,EAAQ,OAAEuF,EAAM,UAAEpB,EAAS,YAAEqB,GAAajH,EAQrE,OACEuB,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,MAAAD,SAAI,iBAGNC,cAAA,OAAKF,UAAU,gBAAeC,SAAEA,IAC/BuF,GACCtF,cAAA,OAAKF,UAAU,WAAUC,SACvBC,cAAA,UAAQC,QAhBIQ,gBACZ+E,YAAQzH,GACdgG,EAAQ0B,OAAO,cACfvB,GAAU,GACVqB,GAAY,EAAM,EAYiBxF,SAAC,kBAG9B,EClBJgE,EAAU,IAAIC,IAiFL0B,MA/Ef,WACE,MAAOJ,EAAQpB,GAAavF,mBAASoF,EAAQ4B,IAAI,gBAC1CC,EAAUL,GAAe5G,oBAAS,IAClC2C,EAAMuE,GAAWlH,mBAAS,KAC1BmH,EAAaC,GAAkBpH,mBAAS,IAqC/C,OAnCAK,qBAAU,KACR,GAAIsG,EAAQ,CACe7E,WACvB,MAAML,EAAOrC,EAAKsC,YAClB,GAAID,EAAM,CACR,MAAM4F,EAAWjH,YAAWZ,EAAI,QAASiC,EAAK6F,IAAK,SAC7ChH,EAAIC,YAAM8G,GAEVE,SADsBC,YAAQlH,IACRmH,KAAKlG,KAAIT,GAAOA,EAAIE,OAAOwF,OACvDY,EAAeG,EACjB,GAEFG,EACF,IACC,CAACf,IAqBCA,EASHtF,cAACqF,EAAU,CAACC,OAAQA,EAAQpB,UAAWA,EAAWqB,YAAaA,EAAYxF,SACvE6F,EAsBA5F,cAACqB,EAAI,CAACC,KAAMA,IArBZzB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,SAAAD,SAAO,oBACPC,cAAA,SAAOiB,SAAWC,GAAM2E,EAAQ3E,EAAEC,OAAOH,SACzChB,cAAA,UAAQC,QAjCOQ,UACrB,GAAIa,EAAM,CACR,MAAMlB,EAAOrC,EAAKsC,YAClB,GAAID,EAAM,CACR,MAAM4F,EAAWjH,YAAWZ,EAAI,QAASiC,EAAK6F,IAAK,eAC7CrF,YAAOoF,EAAU,CAAEb,KAAM7D,IAG/ByE,EAAe,IAAID,EAAaxE,IAChCiE,GAAY,EACd,CACF,GAsBsCxF,SAAC,eACjCC,cAAA,OAAKF,UAAU,eAAcC,SAC1B+F,EAAYQ,OAAS,GACpBzG,eAAA,OAAAE,SAAA,CACEC,cAAA,MAAAD,SAAI,kBACJC,cAAA,MAAAD,SACG+F,EAAY5F,KAAI,CAACqG,EAAG1C,IACnBhE,eAAA,MAAAE,SAAA,CACGwG,EACDvG,cAAA,UAAQC,QAASA,KA3BnC4F,EA2ByDU,QA1BzDhB,GAAY,IA0BgDxF,SAAC,iBAFpC8D,iBAnBvB7D,cAACqF,EAAU,CAACC,OAAQA,EAAQpB,UAAWA,EAAWqB,YAAaA,EAAYxF,SACzEC,cAACiE,EAAI,CAACC,UAAWA,KAiCzB,ECrFasC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5G,cAAC6G,IAAMC,WAAU,CAAA/G,SACfC,cAAC+G,EAAG,M","file":"static/js/main.eaada2d5.chunk.js","sourcesContent":["// src/firebase-config.js\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\nimport {getFirestore} from 'firebase/firestore'\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCmSEgyaYato1bzHVHnxjkuyc7-USWBZnQ\",\n  authDomain: \"peer-port.firebaseapp.com\",\n  projectId: \"peer-port\",\n  storageBucket: \"peer-port.appspot.com\",\n  messagingSenderId: \"84932371825\",\n  appId: \"1:84932371825:web:b86de38dce7cf7477f02d0\",\n  measurementId: \"G-NP26W6ZQMY\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const provider = new GoogleAuthProvider();\nexport const db = getFirestore(app);\n","import React, { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebase-config\";\nimport { collection, addDoc, query, where, onSnapshot } from \"firebase/firestore\";\nimport \"../styles/PrivateChat.css\";\n\nexport const PrivateChat = ({ requestId, onClose }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const chatRef = collection(db, \"privateChats\");\n\n  useEffect(() => {\n    const q = query(\n      chatRef,\n      where(\"requestId\", \"==\", requestId)\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const fetchedMessages = [];\n      snapshot.forEach((doc) => {\n        fetchedMessages.push({ ...doc.data(), id: doc.id });\n      });\n      setMessages(fetchedMessages);\n    });\n\n    return () => unsubscribe();\n  }, [requestId]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (newMessage === \"\") return;\n\n    await addDoc(chatRef, {\n      text: newMessage,\n      createdAt: new Date(),\n      user: auth.currentUser.displayName,\n      requestId,\n    });\n\n    setNewMessage(\"\");\n  };\n\n  return (\n    <div className=\"private-chat\">\n      <div className=\"private-chat-header\">\n        <h2>Private Chat</h2>\n        <button className=\"close-chat\" onClick={onClose}>\n          Close\n        </button>\n      </div>\n      <div className=\"private-chat-messages\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`private-chat-message ${\n              message.user === auth.currentUser.displayName ? \"sent\" : \"received\"\n            }`}\n          >\n            <strong>{message.user}:</strong> {message.text}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit} className=\"private-chat-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          className=\"private-chat-input\"\n          placeholder=\"Type your message...\"\n        />\n        <button type=\"submit\" className=\"private-chat-send-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebase-config\";\nimport { collection, addDoc, serverTimestamp, onSnapshot, query, where, orderBy, updateDoc, doc } from \"firebase/firestore\";\nimport \"../styles/Chat.css\";\nimport \"../styles/RequestForm.css\";\nimport { PrivateChat } from \"./PrivateChat\";\n\nexport const Chat = ({ room }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [showRequestForm, setShowRequestForm] = useState(false);\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\n  const [expandedMessageId, setExpandedMessageId] = useState(null);\n  const [requestFormData, setRequestFormData] = useState({\n    heading: \"\",\n    items: [],\n    logisticsFees: \"\",\n    pickupLocation: \"\",\n    dropLocation: \"\"\n  });\n  const [itemInput, setItemInput] = useState(\"\");\n  const [showPrivateChat, setShowPrivateChat] = useState(false);\n  const [privateChatRequestId, setPrivateChatRequestId] = useState(null);\n\n  const messagesRef = collection(db, \"messages\");\n\n  useEffect(() => {\n    const queryMessages = query(\n      messagesRef,\n      where(\"room\", \"==\", room),\n      orderBy(\"createdAt\")\n    );\n    const unsubscribe = onSnapshot(queryMessages, (snapshot) => {\n      let messages = [];\n      snapshot.forEach((doc) => {\n        messages.push({ ...doc.data(), id: doc.id });\n      });\n      setMessages(messages);\n    });\n\n    return () => unsubscribe();\n  }, [room]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (newMessage === \"\") return;\n\n    await addDoc(messagesRef, {\n      text: newMessage,\n      createdAt: serverTimestamp(),\n      user: auth.currentUser.displayName,\n      room,\n    });\n\n    setNewMessage(\"\");\n  };\n\n  const handleRequestFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (requestFormData.heading === \"\") return;\n    const docRef = await addDoc(messagesRef, {\n      text: `I Want: ${requestFormData.heading}`,\n      createdAt: serverTimestamp(),\n      user: auth.currentUser.displayName,\n      room,\n      requestDetails: requestFormData\n    });\n\n    // Reset form data\n    setRequestFormData({\n      heading: \"\",\n      items: [],\n      logisticsFees: \"\",\n      pickupLocation: \"\",\n      dropLocation: \"\"\n    });\n    setItemInput(\"\");\n    setShowRequestForm(false);\n  };\n\n  const handleFulfill = async (messageId) => {\n    const messageRef = doc(db, \"messages\", messageId);\n    await updateDoc(messageRef, {\n      fulfilled: true\n    });\n\n    // Set the requestId for private chat\n    setPrivateChatRequestId(messageId);\n    setShowPrivateChat(true);\n  };\n\n  const handleViewDetails = (messageId) => {\n    setExpandedMessageId(expandedMessageId === messageId ? null : messageId);\n  };\n\n  const handleRequestButtonClick = () => {\n    setShowRequestForm(true);\n    setSelectedMessageId(null);\n  };\n\n  const handleICanGetClick = () => {\n    setNewMessage(\"\");\n  };\n\n  const handleAddItem = () => {\n    if (itemInput) {\n      setRequestFormData((prevData) => ({\n        ...prevData,\n        items: [...prevData.items, itemInput]\n      }));\n      setItemInput(\"\");\n    }\n  };\n\n  const handleItemInputChange = (event) => {\n    setItemInput(event.target.value);\n  };\n\n  const handleChatButtonClick = (requestId) => {\n    setPrivateChatRequestId(requestId);\n    setShowPrivateChat(true);\n  };\n\n  const handleClosePrivateChat = () => {\n    setShowPrivateChat(false);\n  };\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"header\">\n        <h1>Welcome to: {room.toUpperCase()}</h1>\n      </div>\n      <div className=\"messages\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`message ${message.fulfilled ? 'fulfilled' : (message.text.startsWith('I Want') ? 'i-want' : 'i-can-get')}`}\n            onClick={() => {\n              if (message.text.startsWith('I Want')) {\n                setSelectedMessageId(message.id);\n              }\n            }}\n          >\n            <span className=\"user\">{message.user}:</span>\n            <div className=\"message-text\">{message.text}</div>\n            {message.text.startsWith('I Want') && (\n              <div className=\"message-actions\">\n                <button\n                  className=\"fulfill-button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleFulfill(message.id);\n                  }}\n                >\n                  Fulfill\n                </button>\n                <button\n                  className=\"view-details-button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleViewDetails(message.id);\n                  }}\n                >\n                  {expandedMessageId === message.id ? \"Hide Details\" : \"View Details\"}\n                </button>\n                <button\n                  className=\"chat-button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleChatButtonClick(message.id);\n                  }}\n                >\n                  Chat\n                </button>\n              </div>\n            )}\n            {expandedMessageId === message.id && message.requestDetails && (\n              <div className=\"message-details\">\n                <p><strong>Heading:</strong> {message.requestDetails.heading}</p>\n                <p><strong>Items:</strong> {message.requestDetails.items.join(\", \")}</p>\n                <p><strong>Logistics Fees:</strong> {message.requestDetails.logisticsFees}</p>\n                <p><strong>Pickup Location:</strong> {message.requestDetails.pickupLocation}</p>\n                <p><strong>Drop Location:</strong> {message.requestDetails.dropLocation}</p>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit} className=\"new-message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(event) => setNewMessage(event.target.value)}\n          className=\"new-message-input\"\n          placeholder=\"Type your message here...\"\n        />\n        <button type=\"submit\" className=\"send-button\">\n          Send\n        </button>\n        <button\n          type=\"button\"\n          className=\"request-button\"\n          onClick={handleRequestButtonClick}\n        >\n          I Want\n        </button>\n        <button\n          type=\"button\"\n          className=\"i-can-get-button\"\n          onClick={handleICanGetClick}\n        >\n          I Can Get\n        </button>\n      </form>\n      {showRequestForm && (\n        <div className=\"request-form\">\n          <h2>Request Details</h2>\n          <form onSubmit={handleRequestFormSubmit}>\n            <label>\n              Heading:\n              <input\n                type=\"text\"\n                value={requestFormData.heading}\n                onChange={(e) =>\n                  setRequestFormData({ ...requestFormData, heading: e.target.value })\n                }\n              />\n            </label>\n            <label>\n              Items:\n              <input\n                type=\"text\"\n                value={itemInput}\n                onChange={handleItemInputChange}\n                placeholder=\"Enter item name\"\n              />\n              <button type=\"button\" onClick={handleAddItem}>\n                Add Item\n              </button>\n              <ul>\n                {requestFormData.items.map((item, index) => (\n                  <li key={index}>{item}</li>\n                ))}\n              </ul>\n            </label>\n            <label>\n              Logistics Fees:\n              <input\n                type=\"text\"\n                value={requestFormData.logisticsFees}\n                onChange={(e) =>\n                  setRequestFormData({ ...requestFormData, logisticsFees: e.target.value })\n                }\n              />\n            </label>\n            <label>\n              Pickup Location:\n              <input\n                type=\"text\"\n                value={requestFormData.pickupLocation}\n                onChange={(e) =>\n                  setRequestFormData({ ...requestFormData, pickupLocation: e.target.value })\n                }\n              />\n            </label>\n            <label>\n              Drop Location:\n              <input\n                type=\"text\"\n                value={requestFormData.dropLocation}\n                onChange={(e) =>\n                  setRequestFormData({ ...requestFormData, dropLocation: e.target.value })\n                }\n              />\n            </label>\n            <button type=\"submit\">Submit Request</button>\n            <button type=\"button\" onClick={() => setShowRequestForm(false)}>\n              Cancel\n            </button>\n          </form>\n        </div>\n      )}\n      {showPrivateChat && (\n        <PrivateChat\n          requestId={privateChatRequestId}\n          onClose={handleClosePrivateChat}\n        />\n      )}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo-white.553a5d8e.png\";","import React from \"react\";\nimport { auth, provider } from \"../firebase-config.js\";\nimport { signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport \"../styles/Auth.css\";\nimport Cookies from \"js-cookie\";\nimport logoWhite from '../logo-white.png'; // Import the white logo\n\nconst cookies = Cookies;\n\nexport const Auth = ({ setIsAuth }) => {\n  console.log(\"Auth component rendered\");\n  \n  const signInWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      cookies.set(\"auth-token\", result.user.refreshToken);\n      setIsAuth(true);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const signInWithEmail = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      cookies.set(\"auth-token\", userCredential.user.refreshToken);\n      setIsAuth(true);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const registerWithEmail = async (email, password) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      cookies.set(\"auth-token\", userCredential.user.refreshToken);\n      setIsAuth(true);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    signInWithEmail(email, password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    registerWithEmail(email, password);\n  };\n\n  return (\n    <div className=\"auth\">\n      {/* Image and title at the top */}\n      <div className=\"logo-container\">\n        <div className=\"logo-title\">Peer-Port</div>\n        <img src={logoWhite} alt=\"Logo\" className=\"logo\" />\n      </div>\n      \n      <p>Sign In With Google To Continue</p>\n      <button onClick={signInWithGoogle}>Sign In With Google</button>\n      \n      <form onSubmit={handleLogin}>\n        <h3>Sign In</h3>\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n        <button type=\"submit\">Sign In</button>\n      </form>\n      \n      {/* Instructions section */}\n      <div className=\"instructions-container\">\n        <h2 className=\"instructions-header\">How to Use the App</h2>\n        <ul className=\"instructions-list\">\n          <li>Enter your credentials and click <strong>\"Sign in with Google\"</strong>.</li>\n          <li>Enter the locality name or institute name in the room to join your peer community.</li>\n          <li>\n            If you need to transport or get something delivered, or want to go to another area of your city, ask your peers by posting your request by clicking on the <strong>\"I want\"</strong> button in the room.\n          </li>\n          <li>Decide the amount of fees you can offer for the service.</li>\n          <li>\n            If you're visiting or passing by another location, check the requests to see if you can help.\n          </li>\n          <li>\n            Click on the <strong>\"Fulfill\"</strong> button to offer your service and earn cash.\n          </li>\n          <li>\n            Complete the delivery, receive the agreed-upon fee, and reduce the carbon footprint by using <strong>Peer-Port, the peer transport platform.</strong>\n          </li>\n        </ul>\n      </div>\n      {/* End of instructions section */}\n    </div>\n  );\n};\n","// src/components/AppWrapper.js\nimport React from \"react\";\nimport { signOut } from \"firebase/auth\";\nimport { auth } from \"../firebase-config.js\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nexport const AppWrapper = ({ children, isAuth, setIsAuth, setIsInChat }) => {\n  const signUserOut = async () => {\n    await signOut(auth);\n    cookies.remove(\"auth-token\");\n    setIsAuth(false);\n    setIsInChat(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-header\">\n        <h1> Peer-port</h1>\n      </div>\n\n      <div className=\"app-container\">{children}</div>\n      {isAuth && (\n        <div className=\"sign-out\">\n          <button onClick={signUserOut}> Sign Out</button>\n        </div>\n      )}\n    </div>\n  );\n};\n","// src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport { Chat } from \"./components/Chat\";\nimport { Auth } from \"./components/Auth.js\";\nimport { AppWrapper } from \"./components/AppWrapper\";\nimport Cookies from \"universal-cookie\";\nimport { db, auth } from \"./firebase-config\";\nimport { collection, getDocs, addDoc, query, where } from \"firebase/firestore\";\nimport \"./styles/Auth.css\";\n\nconst cookies = new Cookies();\n\nfunction ChatApp() {\n  const [isAuth, setIsAuth] = useState(cookies.get(\"auth-token\"));\n  const [isInChat, setIsInChat] = useState(false);\n  const [room, setRoom] = useState(\"\");\n  const [joinedRooms, setJoinedRooms] = useState([]);\n\n  useEffect(() => {\n    if (isAuth) {\n      const fetchJoinedRooms = async () => {\n        const user = auth.currentUser;\n        if (user) {\n          const roomsRef = collection(db, \"users\", user.uid, \"rooms\");\n          const q = query(roomsRef);\n          const querySnapshot = await getDocs(q);\n          const rooms = querySnapshot.docs.map(doc => doc.data().name);\n          setJoinedRooms(rooms);\n        }\n      };\n      fetchJoinedRooms();\n    }\n  }, [isAuth]);\n\n  const handleJoinRoom = async () => {\n    if (room) {\n      const user = auth.currentUser;\n      if (user) {\n        const roomsRef = collection(db, \"users\", user.uid, \"rooms\");\n        await addDoc(roomsRef, { name: room });\n\n        // Update local state\n        setJoinedRooms([...joinedRooms, room]);\n        setIsInChat(true);\n      }\n    }\n  };\n\n  const handleRoomClick = (roomName) => {\n    setRoom(roomName);\n    setIsInChat(true);\n  };\n\n  if (!isAuth) {\n    return (\n      <AppWrapper isAuth={isAuth} setIsAuth={setIsAuth} setIsInChat={setIsInChat}>\n        <Auth setIsAuth={setIsAuth} />\n      </AppWrapper>\n    );\n  }\n\n  return (\n    <AppWrapper isAuth={isAuth} setIsAuth={setIsAuth} setIsInChat={setIsInChat}>\n      {!isInChat ? (\n        <div className=\"room\">\n          <label>Type room name:</label>\n          <input onChange={(e) => setRoom(e.target.value)} />\n          <button onClick={handleJoinRoom}>Enter Chat</button>\n          <div className=\"joined-rooms\">\n            {joinedRooms.length > 0 && (\n              <div>\n                <h2>Joined Rooms:</h2>\n                <ul>\n                  {joinedRooms.map((r, index) => (\n                    <li key={index}>\n                      {r}\n                      <button onClick={() => handleRoomClick(r)}>Enter Room</button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <Chat room={room} />\n      )}\n    </AppWrapper>\n  );\n}\n\nexport default ChatApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}